package com.colsanitas.loginadmin.administracion.entity;

// Generated 17 ao√ªt 2011 17:36:03 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

/**
 * AuthTbRelacion generated by hbm2java
 */
@Entity
@Table(name = "AUTH_TB_RELACION")
@Audited
public class RelacionEntity implements LocalEntity {

	
	private static final long serialVersionUID = 2339931427196302869L;
	private Long relacionId;
	@Audited
	private UserEntity usuario;
	
	@Audited
	private PrestadorEntity prestador;
	@Audited
	private int tipoRelacion;
	@Audited
	private boolean estado;
	
	public RelacionEntity() {
	}

	public RelacionEntity(Long relacionId, UserEntity usuario, PrestadorEntity prestador, int tipoRelacion) {
		this.relacionId = relacionId;
		this.usuario = usuario;
		this.prestador = prestador;
		this.tipoRelacion = tipoRelacion;
	}

	public RelacionEntity(Long relacionId, UserEntity usuario, PrestadorEntity prestador, int tipoRelacion, boolean estado) {
		this.relacionId = relacionId;
		this.usuario = usuario;
		this.prestador = prestador;
		this.tipoRelacion = tipoRelacion;
		this.estado = estado;
	}

	@Id
	@Column(name = "RELACION_ID", unique = true, nullable = false, precision = 22, scale = 0)
	@NotNull
    @SequenceGenerator(allocationSize=1, name = "AUTH_SQ_RELACION", sequenceName = "AUTH_SQ_RELACION")
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "AUTH_SQ_RELACION")
	public Long getRelacionId() {
		return this.relacionId;
	}

	public void setRelacionId(Long relacionId) {
		this.relacionId = relacionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID", nullable = false)
	@NotNull
	public UserEntity getUsuario() {
		return this.usuario;
	}

	public void setUsuario(UserEntity usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRESTADOR_ID", nullable = false)
	@NotNull
	public PrestadorEntity getPrestador() {
		return this.prestador;
	}

	public void setPrestador(PrestadorEntity prestador) {
		this.prestador = prestador;
	}

	@Column(name = "TIPO_RELACION", nullable = false, precision = 1, scale = 0)
	public int getTipoRelacion() {
		return this.tipoRelacion;
	}

	public void setTipoRelacion(int tipoRelacion) {
		this.tipoRelacion = tipoRelacion;
	}
	
	@XmlTransient
	@Column(name = "ESTADO", nullable = false, precision = 1, scale = 0)
	public boolean getEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}
	

	@Override
	public Object clone(){
		RelacionEntity object = new RelacionEntity();
		
		object.setEstado(this.estado);
		object.setPrestador(this.prestador);
		object.setRelacionId(this.relacionId);
		object.setTipoRelacion(this.tipoRelacion);
		object.setUsuario(this.usuario);
		
		return estado;
		
	}

}
